#+TITLE: Python PyMongo usage
#+PROPERTY: header-args :session *shell mongodb* :results silent raw

** Contents                                                           :TOC_4:
  - [[#system-environment][System environment]]
  - [[#install-pymongo][Install pymongo]]
  - [[#imports][Imports]]
  - [[#initialize-the-connection][Initialize the connection]]
    - [[#parameters][Parameters]]
    - [[#construct-the-uri][Construct the URI]]
    - [[#connect-to-the-mongodb][Connect to the MongoDB]]
    - [[#select-the-database][Select the database]]
    - [[#select-the-collection][Select the collection]]
  - [[#prepare-the-arguments][Prepare the arguments]]
    - [[#example-docs][Example docs]]
      - [[#one-doc][One doc]]
      - [[#many-doc][Many doc]]
    - [[#queries][Queries]]
      - [[#select-all-documents-in-a-collection][Select All Documents in a Collection]]
      - [[#specify-equality-condition][Specify Equality Condition]]
      - [[#specify-conditions-using-query-operators][Specify Conditions Using Query Operators]]
      - [[#specify-and-conditions][Specify AND Conditions]]
      - [[#specify-or-conditions][Specify OR Conditions]]
      - [[#specify-and-as-well-as-or-conditions][Specify AND as well as OR Conditions]]
    - [[#update-operators][Update Operators]]
      - [[#set-the-value-of-a-field-to-current-date][Set the value of a field to current date]]
      - [[#increment-the-value-of-the-field-by-the-specified-amount][Increment the value of the field by the specified amount]]
  - [[#run-the-command][Run the command]]
    - [[#insert-documents][Insert Documents]]
      - [[#insert-one-document][Insert one document]]
      - [[#insert-multiple-documents][Insert multiple documents]]
    - [[#number-of-documents-in-the-collection][Number of documents in the collection]]
    - [[#find-documents][Find documents]]
    - [[#update-documents][Update Documents]]
      - [[#update-one][Update one]]
      - [[#update-many][Update many]]
      - [[#replace-documents][Replace documents]]
    - [[#delete-documents][Delete Documents]]
      - [[#delete-one][Delete one]]
      - [[#delete-many][Delete many]]
  - [[#docker-container][Docker container]]
      - [[#dockerfile][Dockerfile]]
      - [[#build-the-image][Build the image]]
      - [[#configure][Configure]]
      - [[#run-the-container][Run the container]]
  - [[#references][References]]

** System environment

- Deployed MongoDB 4.4.3

- Python 3.9.1

** Install pymongo

#+BEGIN_SRC sh
pip install pymongo==3.11.3
#+END_SRC

** Imports

#+BEGIN_SRC python
import os
from pprint import pprint
#+END_SRC

#+BEGIN_SRC python
from pymongo import MongoClient
#+END_SRC

** Initialize the connection
*** Parameters

#+BEGIN_SRC python
MONGODB_USERNAME = os.environ.get("MONGODB_USERNAME")
MONGODB_PASSWORD = os.environ.get("MONGODB_PASSWORD")
MONGODB_HOST = os.environ.get("MONGODB_HOST")
MONGODB_DATABASE = os.environ.get("MONGODB_DATABASE")
MONGODB_COLLECTION = os.environ.get("MONGODB_COLLECTION")
#+END_SRC

*** Construct the URI

#+BEGIN_SRC python
uri = f"mongodb://{MONGODB_USERNAME}:{MONGODB_PASSWORD}@{MONGODB_HOST}"
#+END_SRC

*** Connect to the MongoDB

#+BEGIN_SRC python
connection = MongoClient(uri)
#+END_SRC

*** Select the database

#+BEGIN_SRC python
db = connection[MONGODB_DATABASE]
#+END_SRC

*** Select the collection

#+BEGIN_SRC python
collection = db[MONGODB_COLLECTION]
#+END_SRC

** Prepare the arguments
*** Example docs
**** One doc

#+BEGIN_SRC python
doc = {
    "item": "canvas",
    "qty": 100,
    "tags": ["cotton"],
    "size": {
	"h": 28,
	"w": 35.5,
	"uom": "cm"
    }
}
#+END_SRC

**** Many doc

#+BEGIN_SRC python
docs = [
    {
        "item": "journal",
        "qty": 25,
        "size": {"h": 14, "w": 21, "uom": "cm"},
        "status": "A"
    },
    {
        "item": "notebook",
        "qty": 50,
        "size": {"h": 8.5, "w": 11, "uom": "in"},
        "status": "A"
    },
    {
        "item": "paper",
        "qty": 100,
        "size": {"h": 8.5, "w": 11, "uom": "in"},
        "status": "D"
    },
    {
        "item": "planner",
        "qty": 75,
        "size": {"h": 22.85, "w": 30, "uom": "cm"},
        "status": "D"
    },
    {
        "item": "postcard",
        "qty": 45,
        "size": {"h": 10, "w": 15.25, "uom": "cm"},
        "status": "A"
    }
]
#+END_SRC

*** Queries
**** Select All Documents in a Collection

#+BEGIN_SRC python
query = {}
#+END_SRC

**** Specify Equality Condition

#+BEGIN_SRC python
query = {"status": "D"}
#+END_SRC

**** Specify Conditions Using Query Operators

#+BEGIN_SRC python
query = {"status": {"$in": ["A", "D"]}}
#+END_SRC

**** Specify AND Conditions

#+BEGIN_SRC python
query = {"status": "A", "qty": {"$lt": 30}}
#+END_SRC

**** Specify OR Conditions

#+BEGIN_SRC python
query = {"$or": [{"status": "A"}, {"qty": {"$lt": 30}}]}
#+END_SRC

**** Specify AND as well as OR Conditions

#+BEGIN_SRC python
query = {
    "status": "A",
    "$or": [{"qty": {"$lt": 30}}, {"item": {"$regex": "^p"}}]
}
#+END_SRC

*** Update Operators
**** Set the value of a field to current date

#+BEGIN_SRC python
update_operator = {
    "$currentDate": {
        "current_date_default": True,
        "current_date": {"$type": "date"},
        "current_timestamp": {"$type": "timestamp"}
    }
}
#+END_SRC

**** Increment the value of the field by the specified amount

#+BEGIN_SRC python
update_operator = {
    "$inc": {
        "emptyField": 1,
        "a.a": 1,
    }
}
#+END_SRC

** Run the command
*** Insert Documents
**** Insert one document

#+BEGIN_SRC python
collection.insert_one(doc)
#+END_SRC

**** Insert multiple documents

#+BEGIN_SRC python
collection.insert_many(docs)
#+END_SRC

*** Number of documents in the collection

#+BEGIN_SRC python
collection.count_documents(query)
#+END_SRC

*** Find documents

#+BEGIN_SRC python
cursor = collection.find(query)
for doc in cursor:
     pprint(doc)
#+END_SRC

*** Update Documents
**** Update one

#+BEGIN_SRC python
collection.update_one(query, update_operator)
#+END_SRC

**** Update many

#+BEGIN_SRC python
collection.update_many(query, update_operator)
#+END_SRC

**** Replace documents

#+BEGIN_SRC python
collection.replace_one(query, doc)
#+END_SRC

*** Delete Documents
**** Delete one

#+BEGIN_SRC python
collection.delete_one(query)
#+END_SRC

**** Delete many

#+BEGIN_SRC python
collection.delete_many(query)
#+END_SRC

** Docker container
**** Dockerfile

#+BEGIN_SRC conf :tangle Dockerfile
FROM python:3.9.1-buster
RUN pip install pymongo==3.11.3
#+END_SRC

**** Build the image

#+BEGIN_SRC sh
docker build -t python-pymongo-usage .
#+END_SRC

**** Configure

#+BEGIN_SRC conf :tangle .env.dist
MONGODB_USERNAME=user
MONGODB_PASSWORD=topsecret
MONGODB_HOST=mongodb
MONGODB_DATABASE=newdb
MONGODB_COLLECTION=testcollection
#+END_SRC

**** Run the container

#+BEGIN_SRC sh
docker run --rm --link mongodb --env-file .env -it python-pymongo-usage python
#+END_SRC

** References

1. https://docs.mongodb.com/manual/crud/
