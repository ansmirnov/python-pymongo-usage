#+TITLE: Examples of CRUD in MongoDB using the pymongo Python module
#+PROPERTY: header-args :session *shell mongodb* :results silent raw

** Contents                                                           :TOC_3:
  - [[#system-environment][System environment]]
  - [[#install-pymongo][Install pymongo]]
  - [[#imports][Imports]]
  - [[#parameters][Parameters]]
  - [[#construct-the-uri][Construct the URI]]
  - [[#connect-to-the-mongodb][Connect to the MongoDB]]
  - [[#select-the-database][Select the database]]
  - [[#select-the-collection][Select the collection]]
  - [[#insert-documents][Insert Documents]]
    - [[#insert-one-document][Insert one document]]
    - [[#insert-multiple-documents][Insert multiple documents]]
  - [[#find-data][Find data]]
    - [[#find-all][Find all]]
    - [[#find-with-a-criteria][Find with a criteria]]
    - [[#print-results][Print results]]
  - [[#docker-container][Docker container]]
    - [[#dockerfile][Dockerfile]]
    - [[#build-the-image][Build the image]]
    - [[#configure][Configure]]
    - [[#run-the-container][Run the container]]
  - [[#references][References]]

** System environment

- Deployed MongoDB 4.4.3

- Python 3.9.1

** Install pymongo

#+BEGIN_SRC sh
pip install pymongo==3.11.3
#+END_SRC

** Imports

#+BEGIN_SRC python
import os
from pprint import pprint
#+END_SRC

#+BEGIN_SRC python
from pymongo import MongoClient
#+END_SRC

** Parameters

#+BEGIN_SRC python
MONGODB_USERNAME = os.environ.get("MONGODB_USERNAME")
MONGODB_PASSWORD = os.environ.get("MONGODB_PASSWORD")
MONGODB_HOST = os.environ.get("MONGODB_HOST")
MONGODB_DATABASE = os.environ.get("MONGODB_DATABASE")
MONGODB_COLLECTION = os.environ.get("MONGODB_COLLECTION")
#+END_SRC

** Construct the URI

#+BEGIN_SRC python
uri = f"mongodb://{MONGODB_USERNAME}:{MONGODB_PASSWORD}@{MONGODB_HOST}"
#+END_SRC

** Connect to the MongoDB

#+BEGIN_SRC python
connection = MongoClient(uri)
#+END_SRC

** Select the database

#+BEGIN_SRC python
db = connection[MONGODB_DATABASE]
#+END_SRC

** Select the collection

#+BEGIN_SRC python
collection = db[MONGODB_COLLECTION]
#+END_SRC

** Insert Documents
*** Insert one document

#+BEGIN_SRC python
doc = {
    "item": "canvas",
    "qty": 100,
    "tags": ["cotton"],
    "size": {
	"h": 28,
	"w": 35.5,
	"uom": "cm"
    }
}
#+END_SRC

#+BEGIN_SRC python
collection.insert_one(doc)
#+END_SRC

*** Insert multiple documents

#+BEGIN_SRC python
docs = [
    {
        "item": "journal",
        "qty": 25,
        "size": {"h": 14, "w": 21, "uom": "cm"},
        "status": "A"
    },
    {
        "item": "notebook",
        "qty": 50,
        "size": {"h": 8.5, "w": 11, "uom": "in"},
        "status": "A"
    },
    {
        "item": "paper",
        "qty": 100,
        "size": {"h": 8.5, "w": 11, "uom": "in"},
        "status": "D"
    },
    {
        "item": "planner",
        "qty": 75,
        "size": {"h": 22.85, "w": 30, "uom": "cm"},
        "status": "D"
    },
    {
        "item": "postcard",
        "qty": 45,
        "size": {"h": 10, "w": 15.25, "uom": "cm"},
        "status": "A"
    }
]
#+END_SRC

#+BEGIN_SRC python
collection.insert_many(docs)
#+END_SRC

** Find data
*** Find all

#+BEGIN_SRC python
cursor = collection.find({})
#+END_SRC

*** Find with a criteria

#+BEGIN_SRC python
cursor = collection.find({"status": "D"})
#+END_SRC

*** Print results

#+BEGIN_SRC python
for doc in cursor:
     pprint(doc)
#+END_SRC

** Docker container
*** Dockerfile

#+BEGIN_SRC conf :tangle Dockerfile
FROM python:3.9.1-buster
RUN pip install pymongo==3.11.3
#+END_SRC

*** Build the image

#+BEGIN_SRC sh
docker build -t python-pymongo-usage .
#+END_SRC

*** Configure

#+BEGIN_SRC conf :tangle .env.dist
MONGODB_USERNAME=user
MONGODB_PASSWORD=topsecret
MONGODB_HOST=mongodb
MONGODB_DATABASE=newdb
MONGODB_COLLECTION=testcollection
#+END_SRC

*** Run the container

#+BEGIN_SRC sh
docker run --rm --link mongodb --env-file .env -it python-pymongo-usage python
#+END_SRC

** References

1. https://docs.mongodb.com/manual/crud/
